trigger:
- '*'

pool:
  vmImage: 'MyAgentPool'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '5.x'
  versionNumberMajor: '1'
  versionNumberMinor: '0'
  versionNumberRevision: '$(Build.BuildId)'
  versionNumber: '$(versionNumberMajor).$(versionNumberMinor).$(versionNumberRevision)'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '5.9.1'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber), $(versionNumberMajor).$(versionNumberMinor).$(versionNumberRevision), $(versionNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: NuGetCommand@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'

# - task: DotNetCoreCLI@2
#   displayName: 'Restore project dependencies'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- template: templates/test.yml
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
